"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var embeddedSupport_1 = require("./embeddedSupport");
var VirtualDocumentProvider = /** @class */ (function () {
    function VirtualDocumentProvider() {
    }
    VirtualDocumentProvider.prototype.createVirtualDocument = function (context, useRawText) {
        if (useRawText === void 0) { useRawText = false; }
        var contents = useRawText ? context.rawText : context.text;
        return {
            uri: 'untitled://embedded.html',
            languageId: 'html',
            version: 1,
            getText: function () { return contents; },
            positionAt: function (offset) {
                return context.toPosition(offset);
            },
            offsetAt: function (p) {
                return context.toOffset(p);
            },
            lineCount: contents.split(/n/g).length + 1,
        };
    };
    VirtualDocumentProvider.prototype.toVirtualDocPosition = function (position) {
        return position;
    };
    VirtualDocumentProvider.prototype.fromVirtualDocPosition = function (position) {
        return position;
    };
    VirtualDocumentProvider.prototype.toVirtualDocOffset = function (offset) {
        return offset;
    };
    VirtualDocumentProvider.prototype.fromVirtualDocOffset = function (offset) {
        return offset;
    };
    return VirtualDocumentProvider;
}());
exports.VirtualDocumentProvider = VirtualDocumentProvider;
var CssDocumentProvider = /** @class */ (function (_super) {
    __extends(CssDocumentProvider, _super);
    function CssDocumentProvider(htmlLanguageService) {
        var _this = _super.call(this) || this;
        _this.htmlLanguageService = htmlLanguageService;
        return _this;
    }
    CssDocumentProvider.prototype.createVirtualDocument = function (context) {
        var regions = embeddedSupport_1.getDocumentRegions(this.htmlLanguageService, new VirtualDocumentProvider().createVirtualDocument(context));
        return regions.getEmbeddedDocument('css');
    };
    return CssDocumentProvider;
}(VirtualDocumentProvider));
exports.CssDocumentProvider = CssDocumentProvider;
//# sourceMappingURL=virtual-document-provider.js.map