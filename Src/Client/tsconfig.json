{
  "compilerOptions":
  {
    "target": "es6",
    //"target": "es2018",   // require('js-beautify') doesn't work with es2018.
    // "module": "es2015",  // 'es2015' to use ES6 modules.
    "module": "amd",  // 'amd' is used by require.js module loader.
    "strict": true,   // Enforce strict checking of 'null' and 'undefined'.
    "charset": "UTF-8",
    "moduleResolution": "node",
    // "traceResolution": true, // Print module resolution to terminal.
    "newLine": "LF",
    "noEmitOnError": true,
    "outDir": "../../Client/js",
    // 'rootDir' points to Src directory.
    "rootDir": "../",
    // Unfortunaly this doesn't work very well in vs code.
    // 'baseUrl' points to Src so we don't have to use '../../..' in imports.
    // "baseUrl": "../",
    "sourceMap": true
    // "sourceRoot": "../",
    // // Print names of generated files during the compilation.
    // "listFiles": true,
    // // Report module resolution log messages.
    // "traceResolution": true
    // // 'compileOnSave' actually works in vs code if --watch parameter
    // //  is passed to 'tsc', but the same functionality is turned on by
    // // '"isWatching": true' in tasks.json. We do it there.
    // "compileOnSave": true
    // "plugins": [{ "name": "typescript-lit-html-plugin" }]
  }//,
  // Not listing "files" means that every file in directory structure
  // beginning with tsconfig.json will be compiled, including all .d.ts
  // files.
  //
  // "files":
  // [
  //   // Typescript definition file for phaser.
  //   "./Phaser/phaser.d.ts"
  // ]
}
