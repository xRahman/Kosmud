/*
                _  __                             _ 
               | |/ /                            | |
               | ' / ___  ___ _ __ ___  _   _  __| |
               |  < / _ \/ __| '_ ` _ \| | | |/ _` |
               | . \ (_) \__ \ | | | | | |_| | (_| |
               |_|\_\___/|___/_| |_| |_|\__,_|\__,_|


                     Server program entry point
*/

import {REPORT} from '../Shared/Log/REPORT';
import {Syslog} from '../Shared/Log/Syslog';
import {HttpsServer} from '../Server/Net/HttpsServer';
import {Game} from '../Server/Game/Game';

// Include sourcemap support module. It uses .js.map files generated by
// typecript compiler to change stack traces to actually show TypeScript
// stack trace (instead of stack trace in generated JavaScript).
require('source-map-support').install();

// Include package.json file (located in Kosmud directory)
// (In case you were wondering, we need to get all the way up from
//  '/Server/js/Server' because the require() is done in runtime.)
let packageDotJson = require('../../../package.json');


async function start(appName: string, version: string)
{
  Syslog.log("[INFO]", "Starting " + appName
    + " server (v" + version + ")...");

  try
  {
    await HttpsServer.startServers();
  }
  catch (error)
  {
    REPORT(error, "Failed to start http server");
    return;
  }

  Game.startLoop();
}

start(packageDotJson.name, packageDotJson.version);